plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'microsservices'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp:4.1.1'

	// EurekaClient - comunicação com o EurekaServer
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Observability - Micrometer para expor métricas do Actuator num formato de Prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus:1.13.2'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	// Security - Resource Server
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	// Security
	implementation 'org.springframework.security:spring-security-oauth2-jose:6.3.3'

	// Test - fornece dados falsos para testes
	implementation 'net.datafaker:datafaker:2.3.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
