#server:
#  port: ${SERVER_PORT:8072}

spring:

  application:
    name: gatewayserver

  config:
    import: "optional:configserver:http://localhost:8071/"
    cloud: # Essa seção, em conjunto com outras, define como a API Gateway se conecta e gerencia seus microsserviços.
      config:
        refresh:
          enabled: true # Permite buscar automaticamente as configurações atualizadas do servidor de configuração quando houver uma alteração, sem precisar reiniciar o aplicativo.
        fail-fast: true
    gateway: # Essa seção define as configurações específicas da API Gateway, que atua como ponto de entrada único para seus microsserviços.
      discovery: # Essa seção define como a API Gateway descobre os microsserviços que ela deve rotear o tráfego.
        locator: # Essa seção define o mecanismo de descoberta de serviço que a API Gateway utilizará.
          enabled: false # Essa configuração indica que a descoberta de serviço está ativada. Isso significa que a API Gateway buscará ativamente seus microsserviços em um repositório de descoberta.
          lowerCaseServiceId: true

  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

management: # Este bloco define as configurações de gerenciamento da sua aplicação. Ele controla quais endpoints de gerenciamento estão disponíveis e como eles podem ser acessados (Actuator).
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true # Habilita a exibição de informações de ambiente na página de informações do Management.

# colocado no servidor de configuração
#eureka:
#  instance:
#    preferIpAddress: true # Define a preferência do cliente Eureka por utilizar o endereço IP ao invés do nome de host ao se registrar no Eureka Server.
#  client:
#    fetchRegistry: true # Habilita a busca por outros servidores Eureka pelo cliente. Isso permite que o cliente se sincronize com o registro de serviços mais recente, mesmo que o Eureka Server principal esteja indisponível.
#    registerWithEureka: true # Instrui o cliente Eureka para se registrar no Eureka Server, anunciando sua presença e disponibilidade para outros serviços.
#    serviceUrl:
#      defaultZone: http://localhost:8070/eureka/ # Define o URL base do Eureka Server para o qual o cliente se registrará e buscará informações de registro de serviços.

info: # Este bloco define informações sobre a sua aplicação que serão exibidas em diferentes contextos, como a página de informações do Management e logs.
  app:
    name: "GatewayServer"
    description: "Microsserviços de API Gateway ou Edge Server (Ponto único de entrada)."
    version: "1.0.0.0"


