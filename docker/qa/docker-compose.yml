version: "3.9"

services:

  micro_customers_postgres16:
    container_name: micro_customers_postgres16
    restart: always
    environment:
      - POSTGRES_DB=micro_customers
    ports:
      - "5001:5432"
    extends:
      file: common-config.yml
      service: microservice-postgres16-config
    volumes:
      - micro_customers-postgresql-data:/var/lib/postgresql/data

  micro_empresas_postgres16:
    container_name: micro_empresas_postgres16
    restart: always
    environment:
      - POSTGRES_DB=micro_empresas
    ports:
      - "5002:5432"
    extends:
      file: common-config.yml
      service: microservice-postgres16-config
    volumes:
      - micro_empresas-postgresql-data:/var/lib/postgresql/data

  micro_emails_mysql8:
    container_name: micro_emails_mysql8
    restart: always
    environment:
      - MYSQL_DATABASE=micro_emails
    ports:
      - "5003:3306"
    extends:
      file: common-config.yml
      service: microservice-mysql8-config
    volumes:
      - micro_emails-mysql-data:/var/lib/mysql


  rabbit:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    extends:
      file: common-config.yml
      service: network-deploy-service

  configserver:
    container_name: configserver
    image: juniorsmartins/configserver:latest
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: always
    extends:
      file: common-config.yml
      service: microservice-base-config

  eurekaserver:
    container_name: eurekaserver
    image: juniorsmartins/eurekaserver:latest
    ports:
      - "8070:8070"
    depends_on:
      rabbit:
        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: always
    environment:
      SPRING_APPLICATION_NAME: eurekaserver
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  micro_customers:
    container_name: micro_customers
    image: juniorsmartins/micro_customers:latest
    ports:
      - "9101:9101"
    restart: always
    environment:
      DB_HOST: micro_customers_postgres16
      DB_PORT: 5432
      DB_NAME: micro_customers
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      SPRING_APPLICATION_NAME: micro_customers
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      micro_customers_postgres16:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  micro_empresas:
    container_name: micro_empresas
    image: juniorsmartins/micro_empresas:latest
    ports:
      - "9102:9102"
    restart: always
    environment:
      DB_HOST: micro_empresas_postgres16
      DB_PORT: 5432
      DB_NAME: micro_empresas
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      SPRING_APPLICATION_NAME: micro_empresas
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      micro_empresas_postgres16:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  micro_emails:
    container_name: micro_emails
    image: juniorsmartins/micro_emails:latest
    ports:
      - "9103:9103"
    restart: always
    environment:
      DB_HOST: micro_emails_mysql8
      DB_PORT: 3306
      DB_NAME: micro_emails
      DB_USERNAME: root
      DB_PASSWORD: root
      SPRING_APPLICATION_NAME: micro_emails
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      micro_emails_mysql8:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config


  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:2.440.2-lts-jdk21
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - mercado_financeiro_net


volumes:
  micro_customers-postgresql-data:
    name: micro_customers-postgresql-data

  micro_empresas-postgresql-data:
    name: micro_empresas-postgresql-data

  micro_emails-mysql-data:
    name: micro_emails-mysql-data

  jenkins-docker-certs:
    name: jenkins-docker-certs
  jenkins-home:
    name: jenkins-home

networks:
  mercado_financeiro_net:
    name: mercado_financeiro_net
    driver: bridge




